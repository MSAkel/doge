{"version":3,"sources":["table.js","card.js","App.js","reportWebVitals.js","index.js"],"names":["Styles","styled","div","Table","columns","data","setData","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","className","onClick","id","console","log","_data","splice","localStorage","setItem","JSON","stringify","onDelete","Card","name","number","App","React","useMemo","Header","accessor","useState","total","setTotal","coinPrice","setCoinPrice","forHamoodi","setForHamoodi","balance","setBalance","spent","setSpent","bought","setBought","avg","setAvg","totalFees","setTotalFees","received","setReceived","updateCards","parse","getItem","_spent","_bought","_avg","_totalFees","_received","forEach","el","parseFloat","coins","fee","length","toFixed","useEffect","type","value","onChange","ev","target","submitBalance","onSubmit","preventDefault","inputValue","allRecords","push","prev","handleSubmit","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdf4a144.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n    border-radius: 6px;\r\n\r\n    tr {\r\n      background-color: #fff;\r\n      font-weight: 600;\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 1.25rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n      background-color: #fff;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Table = ({ columns, data, setData }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  const onDelete = (id) => {\r\n    console.log(\"id\", id);\r\n    let _data = [...data];\r\n    _data.splice(id, 1);\r\n    setData(_data);\r\n\r\n    localStorage.setItem(\"data\", JSON.stringify(_data));\r\n  };\r\n\r\n  return (\r\n    <Styles>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n              <th></th>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n                <tr>\r\n                  <td className=\"deleteContainer\">\r\n                    <button onClick={() => onDelete(i)} className=\"deleteBtn\">\r\n                      Remove\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </Styles>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst Card = ({ name, number }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"card-content\">\r\n        <h2>{name}</h2>\r\n        <h2>{number}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\nimport Table from \"./table\";\n\nimport \"./App.css\";\nimport Card from \"./card\";\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Data\",\n        columns: [\n          {\n            Header: \"Coins bought\",\n            accessor: \"coins\",\n          },\n          {\n            Header: \"Amount Paid\",\n            accessor: \"total\",\n          },\n          {\n            Header: \"Coin Price\",\n            accessor: \"coinPrice\",\n          },\n          {\n            Header: \"Fees\",\n            accessor: \"fee\",\n          },\n          {\n            Header: \"Received\",\n            accessor: \"received\",\n          },\n          {\n            Header: \"For Hamoodi\",\n            accessor: \"forHamoodi\",\n          },\n        ],\n      },\n    ],\n    []\n  );\n\n  const [data, setData] = React.useState([]);\n  const [total, setTotal] = React.useState();\n  const [coinPrice, setCoinPrice] = React.useState();\n  const [forHamoodi, setForHamoodi] = React.useState(false);\n\n  const [balance, setBalance] = React.useState(0);\n  const [spent, setSpent] = React.useState(0);\n  const [bought, setBought] = React.useState(0);\n  const [avg, setAvg] = React.useState(0);\n  const [totalFees, setTotalFees] = React.useState(0);\n  const [received, setReceived] = React.useState(0);\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n    const coins = (+total / +coinPrice).toFixed(0);\n    const fee = ((+coins / 100) * 0.2).toFixed(3);\n    const received = (+coins - +fee).toFixed(3);\n    console.log(forHamoodi);\n    const inputValue = {\n      coins,\n      total,\n      coinPrice,\n      fee,\n      received,\n      forHamoodi: forHamoodi ? \"Yes\" : \"No\",\n    };\n\n    const allRecords = [];\n    if (data) {\n      allRecords.push(...data, inputValue);\n      setData((prev) => [...prev, inputValue]);\n    } else {\n      allRecords.push(inputValue);\n      setData(inputValue);\n    }\n\n    localStorage.setItem(\"data\", JSON.stringify(allRecords));\n    updateCards();\n  };\n\n  const submitBalance = (ev) => {\n    // ev.preventDefault();\n    setBalance(ev.target.value);\n    localStorage.setItem(\"balance\", JSON.stringify(balance));\n  };\n\n  const updateCards = () => {\n    let _data = JSON.parse(localStorage.getItem(\"data\"));\n    let _spent = 0;\n    let _bought = 0;\n    let _avg = 0;\n    let _totalFees = 0;\n    let _received = 0;\n    _data.forEach((el) => {\n      _spent += parseFloat(el.total);\n      _bought += parseFloat(el.coins);\n      _avg += parseFloat(el.coinPrice);\n      _totalFees += parseFloat(el.fee);\n      _received += parseFloat(el.received);\n    });\n    _avg = _avg / _data.length;\n    setBalance(0);\n    setSpent(_spent.toFixed(3));\n    setBought(_bought.toFixed(3));\n    setAvg(_avg.toFixed(5));\n    setTotalFees(_totalFees.toFixed(3));\n    setReceived(_received.toFixed(3));\n  };\n\n  React.useEffect(() => {\n    if (localStorage.getItem(\"data\")) {\n      setData(JSON.parse(localStorage.getItem(\"data\")));\n      updateCards();\n    }\n    if (localStorage.getItem(\"balance\")) {\n      setBalance(JSON.parse(localStorage.getItem(\"balance\")));\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"content-container\">\n        <div className=\"cards-container\">\n          <div className=\"card-container\">\n            <div className=\"card-content\">\n              <h2>Total In Bank</h2>\n              <input\n                className=\"blnc\"\n                type=\"text\"\n                name=\"balance\"\n                value={balance}\n                onChange={(ev) => submitBalance(ev)}\n              />\n            </div>\n          </div>\n          <Card name=\"Total paid NDAX\" number={spent} />\n          <Card name=\"Total Coins\" number={bought} />\n          <Card name=\"Total Fees (coins)\" number={totalFees} />\n          <Card name=\"Total Coins Received\" number={received} />\n          <Card name=\"Average Cost\" number={avg} />\n        </div>\n\n        <div className=\"row-container\">\n          <form onSubmit={(ev) => handleSubmit(ev)} className=\"form-container\">\n            <h1>Add Record</h1>\n            <div className=\"field-container\">\n              <h4>$ Total paid:</h4>\n              <input\n                type=\"text\"\n                name=\"total\"\n                value={total}\n                onChange={(ev) => setTotal(ev.target.value)}\n              />\n            </div>\n\n            <div className=\"field-container\">\n              <h4>$ Price per coin:</h4>\n              <input\n                type=\"text\"\n                name=\"coinPrice\"\n                value={coinPrice}\n                onChange={(ev) => setCoinPrice(ev.target.value)}\n              />\n            </div>\n\n            <div className=\"field-container\">\n              <h4>For Hamoodi</h4>\n              <input\n                type=\"checkbox\"\n                name=\"hamoodi\"\n                value={forHamoodi}\n                onChange={(ev) => setForHamoodi(ev.target.checked)}\n              />\n            </div>\n\n            <input type=\"submit\" value=\"Submit\" className=\"submit-btn\" />\n          </form>\n\n          {data.length && (\n            <Table columns={columns} data={data} setData={setData} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}